version: "3.7"

services:
   rosdb:
    image: postgres:15.3-alpine
    container_name: rosdb
    restart: unless-stopped
    labels:
      - traefik.enable=false
    networks:
      - rosskerynet
    env_file:
      - dbp.env
    ports:
      - "5438:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
      - rskpgdata:/var/lib/postgresql/data
      - rskpgconf:/etc/postgresql
      - rskpglog:/var/log/postgresql
  valset:
    image: valkey:7.2-alpine
    container_name: valset
    restart: always
    ports:
      - "6379:6379"
    env_file:
      - vlp.env
    command: valkey-server --save 20 1 --loglevel warning --requirepass ${VALKEY_PASSWORD}
    volumes:
      - rskset:/data
  rosskery:
    container_name: rosskery
    image: rosskery
    labels:
      - traefik.http.routers.rosskery.rule=Host(`rosskery.dmz.urx.ink`)
      - traefik.http.routers.rosskery.entrypoints=web,websecure
      - traefik.http.routers.rosskery.service=rosskery
      - traefik.http.services.rosskery.loadbalancer.server.port=8078
      - traefik.http.routers.rosskery.tls=true
      - traefik.http.routers.rosskery.tls.certresolver=le
      - traefik.port=80
    networks:
      - rosskerynet
      - proxy
    ports:
      - 8078:8078

networks:
  proxy:
    external: true
  rosskerynet:
    driver: bridge
    external: false

volumes:
  rosskerypgdata:
    driver: local
  rosskerypgconf:
    driver: local
  rosskerypglog:
    driver: local
  rskpgdata:
    driver: local
  rskpgconf:
    driver: local
  rskpglog:
    driver: local
  rskset:
    driver: local
